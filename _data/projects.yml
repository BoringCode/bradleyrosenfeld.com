- name: Clear Skies
  description: |-
    Clear Skies is a simple, client side webapp that grabs the weather wherever you are.
  github: https://github.com/BoringCode/ClearSkies
- name: Scripture Engagement Platform
  description: |-
    I worked with a team of students to develop this application in a class at [Taylor University](http://taylor.edu). 
    We implemented it with [Flask](http://flask.pocoo.org) from a system requirements specification that we presented in a prior class.
  github: https://github.com/BoringCode/scripture-engagement-platform
- name: jadsh
  description: |-
    jadsh (Just Another Dumb SHell) is an experiment in building a really dumb, slow shell in Python. 
    It has zero dependancies and is built entirely using Python stdlib and ANSI escape sequences.
  github: https://github.com/BoringCode/jadsh
- name: JSPhotoBooth
  description: |-
    Detects faces and draws cool props on them using JavaScript in the browser. 
    I built this simple application for a Computer Vision course with a few friends. We wanted to focus on extending an existing feature detector to rotated faces.
  github: https://github.com/BoringCode/JSPhotoBooth
- name: Risky-CLIPS
  description: |-
    A CLIPS program that plays Risk. I built this with some classmates in a Knowledge Based Systems class as our final project.
  github: https://github.com/BoringCode/Risky-CLIPS
- name: Translate This!
  description: |-
    A simple addon for Firefox that allows inline and full page translation to a target language. 
    It averages about 90,000 daily users and has racked up over 1,250,000 downloads.
  url: https://addons.mozilla.org/en-US/firefox/addon/translate-this/
  github: https://github.com/BoringCode/TranslateThis
- name: RedditNotifier
  description: |-
    An addon for Firefox that checks for unread messages and new posts on [reddit](https://reddit.com).
  url: https://addons.mozilla.org/en-US/firefox/addon/redditnotifier/
  github: https://github.com/BoringCode/RedditNotifier
- name: Game Contest Server
  description: |-
    At [Taylor University](http://taylor.edu), many computer science professors use turn-based games (like Checkers, Risk, and Battleships) to teach programming principles like control structures and AI.
    Each game has a different set of rules and lacks a standardized way for students to evaulate their performance against other players. 
    The Game Contest Server seeks to solve the problems posed by the original, unstandardized system. It is an interactive, web-based manager for automated turn-based game contests.
    
      I worked with a team of students on this application as our senior project. My main role was to develop a replay system so that students could replay the moves that their players made during each match.
    This required building a logging system with a simple TCP protocol and then building a rendering system using WebGL in the browser.

      At the end of our senior project, we gave [in-depth presentation](/assets/pdfs/senior-project-final-presentation-slides.pdf). I also created a [poster](/assets/pdfs/senior-project-poster.pdf) further describing my role in the project.
  github: https://github.com/BoringCode/game-contest-server
